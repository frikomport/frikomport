<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>no.unified</groupId>
		<artifactId>soak</artifactId>
		<version>1.8-SNAPSHOT</version>
	</parent>
	
    <modelVersion>4.0.0</modelVersion>
    <artifactId>soak-dao</artifactId>
	<name>FriKomPort - dao package</name>
    <packaging>jar</packaging>

    <build>
		<sourceDirectory>${project.basedir}</sourceDirectory>
		<testSourceDirectory>${project.basedir}/../../test/dao</testSourceDirectory>
        <defaultGoal>install</defaultGoal>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
			<plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>xdoclet-maven-plugin</artifactId>
			  <version>1.0</version>
			  <dependencies>
                    <dependency>
                        <groupId>xdoclet</groupId>
                        <artifactId>xdoclet</artifactId>
                        <version>1.3-SNAPSHOT</version>
                    </dependency>
                    <dependency>
                        <groupId>xdoclet</groupId>
                        <artifactId>xdoclet-hibernate-module</artifactId>
                        <version>1.3-SNAPSHOT</version>
                    </dependency>	                    
					<dependency>
                        <groupId>xdoclet</groupId>
                        <artifactId>xdoclet-xdoclet-module</artifactId>
                        <version>1.3-SNAPSHOT</version>
                    </dependency>					
					<dependency>
                        <groupId>xdoclet</groupId>
                        <artifactId>xdoclet-spring-module</artifactId>
                        <version>1.3-SNAPSHOT</version>
                    </dependency>
					<dependency>
                        <groupId>xdoclet</groupId>
                        <artifactId>xjavadoc</artifactId>
                        <version>1.5-SNAPSHOT</version>
                    </dependency>
					<dependency>
						<groupId>dom4j</groupId>
						<artifactId>dom4j</artifactId>
						<version>1.6.1</version>
					</dependency>					
			  </dependencies>
			  <executions>
				<execution>
				  <phase>generate-sources</phase>
				  <goals>
					<goal>xdoclet</goal>
				  </goals>
				  <configuration>
					<tasks>
					  <hibernatedoclet destdir="${project.build.directory}/classes" mergedir="metadata/dao"
						excludedtags="@version,@author" addedtags="@xdoclet-generated at ${TODAY}"
						force="${xdoclet.force}" verbose="true">
						<fileset dir="${project.basedir}" excludes="**/jdbc/*.java;**/ez/*.java"/>
						<hibernate validatexml="true" version="3.0"/>
						<hibernatecfg version="3.0" hbm2ddl="update" jdbcurl="&lt;![CDATA[${jdbc.url}]]&gt;" dialect="${hibernate.dialect}" 
						driver="${jdbc.driverClassName}" userName="${jdbc.username}" password="${jdbc.password}" validateXML="false"/>
					  </hibernatedoclet>
					</tasks>
				  </configuration>
				</execution>
			  </executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<tstamp>
									<format property="now" pattern="yyyy-MM-DD hh:mm:ss"/>
									<format property="now-1" pattern="yyyy-MM-dd HH:mm:ss" offset="-1" unit="day"/>
									<format property="now-2" pattern="yyyy-MM-dd HH:mm:ss" offset="-2" unit="day"/>
									<format property="now-3" pattern="yyyy-MM-dd HH:mm:ss" offset="-3" unit="day"/>
									<format property="now-4" pattern="yyyy-MM-dd HH:mm:ss" offset="-4" unit="day"/>
									<format property="now-5" pattern="yyyy-MM-dd HH:mm:ss" offset="-5" unit="day"/>
									<format property="now+1" pattern="yyyy-MM-dd HH:mm:ss" offset="1" unit="day"/>
									<format property="now+2" pattern="yyyy-MM-dd HH:mm:ss" offset="2" unit="day"/>
									<format property="now+3" pattern="yyyy-MM-dd HH:mm:ss" offset="3" unit="day"/>
									<format property="now+4" pattern="yyyy-MM-dd HH:mm:ss" offset="4" unit="day"/>
									<format property="now+5" pattern="yyyy-MM-dd HH:mm:ss" offset="5" unit="day"/>
								</tstamp>
								<copy file="${project.basedir}/../../metadata/sql/sample-data.xml" tofile="${project.basedir}/../../metadata/sql/sample-data-prepared.xml" overwrite="true">
									<filterset>
										<filter token="NOW-1" value="${now-1}"/>
										<filter token="NOW-2" value="${now-2}"/>
										<filter token="NOW-3" value="${now-3}"/>
										<filter token="NOW-4" value="${now-4}"/>
										<filter token="NOW-5" value="${now-5}"/>
										<filter token="NOW+1" value="${now+1}"/>
										<filter token="NOW+2" value="${now+2}"/>
										<filter token="NOW+3" value="${now+3}"/>
										<filter token="NOW+4" value="${now+4}"/>
										<filter token="NOW+5" value="${now+5}"/>
									</filterset>
								</copy>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <components>
                        <component>
                            <name>hbm2ddl</name>
                            <implementation>annotationconfiguration</implementation>
                            <!-- Use 'jpaconfiguration' if you're using JPA. -->
                            <!--<implementation>jpaconfiguration</implementation>-->
                        </component>
                    </components>
                    <componentProperties>
                        <drop>true</drop>
                        <jdk5>true</jdk5>
                        <propertyfile>target/classes/database.properties</propertyfile>
                        <skip>${maven.test.skip}</skip>
                    </componentProperties>
                </configuration>
                <executions>
                    <execution>
						<id>generate schema</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                    </execution>                    
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-3</version>

				<!--jar file that has the jdbc driver -->
				<dependencies>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.artifactId}</artifactId>
					<version>${jdbc.version}</version>
					<scope>test</scope>
				</dependency>
				</dependencies>

				<!-- common configurations -->
				<configuration>
					<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
					<driver>${jdbc.driverClassName}</driver>
					<url>${jdbc.url}</url>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
				</configuration>

				<executions>
					<execution>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
						<!-- specific configurations -->
						<configuration>
							<type>CLEAN_INSERT</type>
							<src>${project.basedir}/../../metadata/sql/sample-data-prepared.xml</src>
							<metadataHandlerName>org.dbunit.ext.mysql.MySqlMetadataHandler</metadataHandlerName>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
		<resources>
			<resource>
				<directory>${project.basedir}/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/resources</directory>
				<filtering>true</filtering>
			</testResource>			
			<testResource>
				<directory>${project.basedir}/../../test/dao</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/applicationContext-*.xml</include>
				</includes>
			</testResource>
		</testResources>
    </build>

    <dependencies>
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons.beanutils.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency> 
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core-tiger</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
        <dependency>
            <groupId>org.subethamail</groupId>
            <artifactId>subethasmtp-wiser</artifactId>
            <version>${wiser.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>net.fortuna</groupId>
			<artifactId>ical4j</artifactId>
			<version>${ical4j.version}</version>
		</dependency>
		<dependency>
		<groupId>javax.xml</groupId>
			<artifactId>jaxrpc-api</artifactId>
			<version>${jaxrpc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis</artifactId>
			<version>${axis.version}</version>
		</dependency>
    </dependencies>
	

	
</project>
