<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <bean id="lookupManager" class="no.unified.soak.service.impl.LookupManagerImpl">
        <property name="lookupDAO" ref="lookupDAO"/>
    </bean>
	
    <!-- Transaction template for Managers, from:
         http://blog.exis.com/colin/archives/2004/07/31/concise-transaction-definitions-spring-11/ -->
    <bean id="txProxyTemplate" abstract="true"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="process*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <!-- Generic manager that can be used to do basic CRUD operations on any objects -->
    <bean id="manager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.BaseManager">
                <property name="DAO" ref="dao"/>
            </bean>
        </property>
    </bean>
    
    <!-- Transaction declarations for business services.  To apply a generic transaction proxy to
         all managers, you might look into using the BeanNameAutoProxyCreator -->
    <bean id="userManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.UserManagerImpl" >
                <property name="userDAO" ref="userDAO"/>
                <property name="userEzDaoJdbc" ref="userEzDaoJdbc"/>
                <property name="roleManager" ref="roleManager"/>
                <property name="messageSource" ref="messageSource"/>
                <property name="organizationManager" ref="organizationManager"/>
            </bean>
        </property>
        <!-- Override default transaction attributes b/c of LoginCookie methods -->
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED,-UserExistsException</prop>
            </props>
        </property>
        <!-- This property is overriden in applicationContext-security.xml to add
             method-level role security -->
        <property name="preInterceptors">
            <list>
                <ref bean="userSecurityInterceptor"/>
            </list>
        </property>
    </bean>

    <!-- This interceptor insures that that users can only update themselves, not other users -->
    <bean id="userSecurityInterceptor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="userSecurityAdvice"/>
        <property name="patterns" value=".*saveUser"/>
    </bean>

    <bean id="userSecurityAdvice" class="no.unified.soak.service.UserSecurityAdvice"/>

    <bean id="roleManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.RoleManagerImpl">
                <property name="roleDAO" ref="roleDAO"/>
            </bean>
        </property>
    </bean>
     
    <bean id="mailEngine" class="no.unified.soak.service.MailEngine">
        <property name="mailSender" ref="mailSender"/>
        <property name="velocityEngine" ref="velocityEngine"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
    </bean>

    <!-- Configure Velocity for sending e-mail -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="velocimacro.library"></prop>
            </props>
        </property>
    </bean>

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" singleton="false">
        <property name="from" value="${mail.default.from}"/>
    </bean>

    <!-- Load WEB-INF/classes/ApplicationResources.properties for i18n messages using JSTL's fmt tag -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="10"/>
        <property name="basenames">
            <list>
                <value>classpath:ApplicationOverride</value>
                <value>classpath:ApplicationResources</value>
            </list>
        </property>
    </bean>

    <bean id="organizationManager" parent="txProxyTemplate">
    	<property name="target">
   	    	<bean class="no.unified.soak.service.impl.OrganizationManagerImpl" autowire="byName" />
   	    </property>
  	</bean>
    <!-- Add new Managers here -->
    <!--Location-START-->
    <bean id="locationManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.LocationManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!--Location-END-->
    <!--Person-START-->
    <bean id="personManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.PersonManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!--Person-END-->
    <!--ServiceArea-START-->
    <bean id="serviceAreaManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.ServiceAreaManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!--ServiceArea-END-->
    
    <!--Course-START-->
    <bean id="courseManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.CourseManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!--Course-END-->
    
    <!--Registration-START-->
    <bean id="registrationManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.RegistrationManagerImpl" autowire="byName"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED,-ObjectRetrievalFailureException</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    <!--Registration-END-->

    <!--Attachment-START-->
    <bean id="attachmentManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.AttachmentManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!--Attachment-END-->

    <!-- WaitingList-START-->    
    <bean id="waitingListManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.WaitingListManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!-- WaitingList-END-->

    <!--Notification-START-->    
    <bean id="notificationManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.NotificationManagerImpl">
                <property name="notificationDao" ref="notificationDao"/>
                <property name="registrationManager" ref="registrationManager"/>
                <property name="messageSource" ref="messageSource"/>
			    <property name="mailEngine" ref="mailEngine"/>
			    <property name="mailSender" ref="mailSender"/>
            </bean>
        </property>
    </bean>
    <!--Notification-END-->

    <!-- CourseStatus-START-->
    <bean id="courseStatusManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="no.unified.soak.service.impl.CourseStatusManagerImpl" autowire="byName"/>
        </property>
    </bean>
    <!-- CourseStatus-END-->

    <!-- UserSynchronize-START-->
    <bean id="userSynchronizeManager" parent="txProxyTemplate">
         <property name="target">
            <bean class="no.unified.soak.service.impl.UserSynchronizeManagerImpl" autowire="byName"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED,-ObjectRetrievalFailureException</prop>
            </props>
        </property>
    </bean>
    <!-- UserSynchronize-END-->

    <!-- DatabaseUpdate-START-->
    <bean id="databaseUpdateManager" parent="txProxyTemplate">
         <property name="target">
            <bean class="no.unified.soak.service.impl.DatabaseUpdateManagerImpl" autowire="byName"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED,-ObjectRetrievalFailureException</prop>
            </props>
        </property>
    </bean>
    <!-- DatabaseUpdate-END-->

</beans>
